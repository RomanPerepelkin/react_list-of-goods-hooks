{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sort_field_default","sortField","setSortField","isReversed","setIsReversed","visibileGoods","goods","preperedGoods","sort","good1","good2","sort_field_alphabeticaly","localeCompare","sort_field_length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,2BAAAA,E,0CAAAA,E,uBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,oBAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SACEC,EACAL,EACAE,GAEA,IAAII,EAAa,YAAOD,GAiBxB,OAfAC,EAAgBA,EACbC,MAAK,SAACC,EAAOC,GACZ,OAAQT,GACN,KAAKL,EAASe,yBACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,kBACZ,OAAOJ,EAAMR,GAAaS,EAAMT,GAClC,QAAS,OAAO,MAIlBE,IACFI,EAAgBA,EAAcO,WAGzBP,EAMeQ,CACpBlB,EACAI,EACAE,GAQF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcL,EAASe,2BAErCQ,QAAS,kBAAMjB,EAAaN,EAASe,2BALvC,iCAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcL,EAASiB,oBAErCM,QAAS,kBAAMjB,EAAaN,EAASiB,oBALvC,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IAPhC,sBAYEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5CI,WACZf,GAAc,GACdF,EAAaN,EAASI,qBAuChB,sBAUJ,6BACE,6BACGK,EAAce,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC7GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f722ccb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  sort_field_length = 'length',\n  sort_field_alphabeticaly = 'alphabetically',\n  sort_field_default = '',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: SortType,\n  isReversed: boolean,\n) {\n  let preperedGoods = [...goods];\n\n  preperedGoods = preperedGoods\n    .sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.sort_field_alphabeticaly:\n          return good1.localeCompare(good2);\n        case SortType.sort_field_length:\n          return good1[sortField] - good2[sortField];\n        default: return 0;\n      }\n    });\n\n  if (isReversed) {\n    preperedGoods = preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.sort_field_default);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibileGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    isReversed,\n  );\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortField(SortType.sort_field_default);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.sort_field_alphabeticaly,\n          })}\n          onClick={() => setSortField(SortType.sort_field_alphabeticaly)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.sort_field_length,\n          })}\n          onClick={() => setSortField(SortType.sort_field_length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibileGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}